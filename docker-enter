#!/bin/bash

if [ -e $(dirname "$0")/nsenter ]; then
    # with boot2docker, nsenter is not in the PATH but it is in the same folder
    NSENTER=$(dirname "$0")/nsenter
else
    NSENTER=nsenter
fi

if [ -z "$1" ]; then
    echo "Usage: `basename "$0"` CONTAINER [COMMAND [ARG]...]"
    echo ""
    echo "Enters the Docker CONTAINER and executes the specified COMMAND."
    echo "If COMMAND is not specified, runs an interactive shell in CONTAINER."
else
    PID=$(docker inspect --format "{{.State.Pid}}" "$1")
    [ -z "$PID" ] && exit 1
    shift

    if [ "$(id -u)" -ne "0" ]; then
        which sudo > /dev/null
        if [ "$?" -eq "0" ]; then
          LAZY_SUDO="sudo "
        else
          echo "Warning: Cannot find sudo; Invoking nsenter as the user $USER." >&2
        fi
    fi
    

    # Use env to clear all host environment variables and set then anew
    # We use perl to read environment variables from the environ file
    #
    # -0 sets that this file is zero character delimited
    # -n that it should iterate over the file
    # -l ensures that the zero character is removed
    # -e ensures that it runs command line
    # 
    # Begin initializes the array l
    # For each element, we push the cleaned-up environment variable into it
    # In end, we exec a nsenter env command with it
    #
    # We splice out the bash magic arguments in the second exec so that
    # they're not interpreted as files

    if [ $# -lt 1 ]; then
        $LAZY_SUDO perl -0wnle "BEGIN{@l=()};push @l,\$_;END{exec ('$NSENTER','--target','$PID','--mount','--uts','--ipc','--pid','--','env','-i','-',@l,'su','-m','root')}"  /proc/$PID/environ 
    else
	$LAZY_SUDO perl -0wnle "BEGIN{@l=();@a=splice @ARGV,1};push @l,\$_;END{exec ('$NSENTER','--target','$PID','--mount','--uts','--ipc','--pid','--','env','-i','-',@l,@a)}" /proc/$PID/environ "$@"
    fi
fi
